name: Update AUR Package

on:
  schedule:
    - cron: '0 * * * *'  # Run every hour
  workflow_dispatch:

jobs:
  check-and-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set DEBUG environment variable
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/development" ]]; then
            echo "DEBUG=true" >> $GITHUB_ENV
          else
            echo "DEBUG=false" >> $GITHUB_ENV
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          echo "::group::Installing Python dependencies"
          python -m pip install --upgrade pip
          pip install requests packaging pyyaml
          echo "::endgroup::"

          echo "::group::Installing system dependencies"
          sudo apt-get update
          sudo apt-get install -y squashfs-tools
          echo "::endgroup::"

      - name: Check for updates
        id: check
        run: |
          echo "::group::Checking for updates"
          python check.py
          echo "check_output=$(cat check_output.json | jq -c .)" >> $GITHUB_OUTPUT
          echo "::endgroup::"

      - name: Debug Output
        run: |
          echo "Check output: ${{ steps.check.outputs.check_output }}"
          echo "DEBUG: $DEBUG"

      - name: Check if update is needed
        id: update_needed
        run: |
          if [ "${{ fromJson(steps.check.outputs.check_output).update_needed }}" != "true" ]; then
            echo "No update needed. Stopping workflow."
            echo "update_needed=false" >> $GITHUB_OUTPUT
          else
            echo "update_needed=true" >> $GITHUB_OUTPUT
          fi

      - name: Notify if no update needed
        if: steps.update_needed.outputs.update_needed == 'false'
        run: echo "No update needed."

      - name: Update PKGBUILD
        if: steps.update_needed.outputs.update_needed == 'true'
        env:
          DEBUG: ${{ env.DEBUG }}
        run: |
          echo "::group::Updating PKGBUILD"
          python update_pkgbuild.py check_output.json
          echo "::endgroup::"
          echo "Final PKGBUILD content:"
          cat PKGBUILD

          echo "::group::Verifying Electron version"
          if grep -q "_electron=" PKGBUILD; then
            echo "✓ Electron version found in PKGBUILD:"
            grep -A 2 -B 2 "_electron=" PKGBUILD
          else
            echo "❌ ERROR: Electron version line missing from PKGBUILD!"
            echo "This will cause the package build to fail."
            exit 1
          fi
          echo "::endgroup::"

      - name: Commit changes
        if: steps.update_needed.outputs.update_needed == 'true'
        run: |
          # Clean up untracked files
          git clean -fd

          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          # Add PKGBUILD
          git add PKGBUILD
          git commit -m "Update PKGBUILD to version ${{ fromJson(steps.check.outputs.check_output).new_version }} (commit ${{ fromJson(steps.check.outputs.check_output).new_commit }})" || echo "No changes to commit"
          git push "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" HEAD:${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check branch and continue or stop workflow
        if: steps.update_needed.outputs.update_needed == 'true'
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/development" ]]; then
            echo "On development branch, stopping workflow"
            exit 0
          else
            echo "On main branch, continuing workflow"
          fi

      - name: Install SSH Key
        if: steps.update_needed.outputs.update_needed == 'true' && github.ref != 'refs/heads/development'
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          if_key_exists: replace

      - name: Publish AUR package
        if: steps.update_needed.outputs.update_needed == 'true' && github.ref != 'refs/heads/development'
        uses: KSXGitHub/github-actions-deploy-aur@v2.7.2
        with:
          pkgname: cursor-beta-bin
          pkgbuild: ./PKGBUILD
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: "Update to version ${{ fromJson(steps.check.outputs.check_output).new_version }} (commit ${{ fromJson(steps.check.outputs.check_output).new_commit }})"
          allow_empty_commits: false
          ssh_keyscan_types: rsa,ecdsa,ed25519

      - name: Summary
        run: |
          echo "::group::Workflow Summary"
          echo "Update needed: ${{ fromJson(steps.check.outputs.check_output).update_needed }}"
          echo "New version: ${{ fromJson(steps.check.outputs.check_output).new_version }}"
          echo "New commit: ${{ fromJson(steps.check.outputs.check_output).new_commit }}"
          echo "PKGBUILD updated and published to AUR"
          echo "::endgroup::"
